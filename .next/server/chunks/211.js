"use strict";exports.id=211,exports.ids=[211],exports.modules={2211:(e,r,i)=>{i.r(r),i.d(r,{fromProcess:()=>l});var o=i(868),t=i(1940),s=i(2081),c=i(3837),n=i(8876);let a=(e,r,i)=>{if(1!==r.Version)throw Error(`Profile ${e} credential_process did not return Version 1.`);if(void 0===r.AccessKeyId||void 0===r.SecretAccessKey)throw Error(`Profile ${e} credential_process returned invalid credentials.`);if(r.Expiration){let i=new Date;if(new Date(r.Expiration)<i)throw Error(`Profile ${e} credential_process returned expired credentials.`)}let o=r.AccountId;!o&&i?.[e]?.aws_account_id&&(o=i[e].aws_account_id);let t={accessKeyId:r.AccessKeyId,secretAccessKey:r.SecretAccessKey,...r.SessionToken&&{sessionToken:r.SessionToken},...r.Expiration&&{expiration:new Date(r.Expiration)},...r.CredentialScope&&{credentialScope:r.CredentialScope},...o&&{accountId:o}};return(0,n.P)(t,"CREDENTIALS_PROCESS","w"),t},d=async(e,r,i)=>{let o=r[e];if(r[e]){let n=o.credential_process;if(void 0!==n){let o=(0,c.promisify)(s.exec);try{let i;let{stdout:t}=await o(n);try{i=JSON.parse(t.trim())}catch{throw Error(`Profile ${e} credential_process returned invalid JSON.`)}return a(e,i,r)}catch(e){throw new t.m(e.message,{logger:i})}}else throw new t.m(`Profile ${e} did not contain credential_process.`,{logger:i})}else throw new t.m(`Profile ${e} could not be found in shared credentials file.`,{logger:i})},l=(e={})=>async({callerClientConfig:r}={})=>{e.logger?.debug("@aws-sdk/credential-provider-process - fromProcess");let i=await (0,o.MX)(e);return d((0,o.Jl)({profile:e.profile??r?.profile}),i,e.logger)}}};